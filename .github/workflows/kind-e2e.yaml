name: KinD e2e tests

on:
  push:
    branches: [ 'main', 'release-*' ]
  pull_request:
    branches: [ 'main', 'release-*' ]

jobs:

  e2e-tests:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        k8s-version: [ v1.33.x ]

    name: e2e tests
    runs-on: ${{ matrix.platform }}

    env:
      KO_DOCKER_REPO: kind.local
      KIND_VERSION: ${{ matrix.kind-version }}

    steps:
    - name: Set up Go
      uses: knative/actions/setup-go@main
      id: go

    - name: Check out code onto GOPATH
      uses: actions/checkout@v2
      with:
        path: ./src/knative.dev/${{ github.event.repository.name }}

    - name: Install KinD
      uses: chainguard-dev/actions/setup-kind@16e2fd6603a1c6a1fbc880fdbb922b2e8e2be3e7
      with:
        k8s-version: ${{ matrix.k8s-version }}
        kind-worker-count: 1
        cluster-suffix: c${{ github.run_id }}.local

    - name: Run e2e Tests
      working-directory: ./src/knative.dev/${{ github.event.repository.name }}
      run: |
        set -x

        source test/e2e-common.sh && test_setup

        # Run the tests tagged as e2e on the KinD cluster.
        go run gotest.tools/gotestsum@v1.8.0 --format testname -- \
          -race -count=1 -timeout=1h -tags=e2e ./test/...

    - name: Gather Failure Data
      if: ${{ failure() }}
      run: |
        set -x

        echo "===================== K8s Events ==========================="
        kubectl get events --all-namespaces=true -oyaml

        echo "===================== Pod Logs ============================="
        namespace=knative-reconciler-test
        for pod in $(kubectl get pod -n $namespace | grep Running | awk '{print $1}'); do
          for container in $(kubectl get pod "${pod}" -n $namespace -ojsonpath='{.spec.containers[*].name}'); do
            echo "Namespace, Pod, Container: ${namespace}, ${pod}, ${container}"
            kubectl logs -n $namespace "${pod}" -c "${container}" || true
            echo "----------------------------------------------------------"
            echo "Namespace, Pod, Container (Previous instance): ${namespace}, ${pod}, ${container}"
            kubectl logs -p -n $namespace "${pod}" -c "${container}" || true
            echo "============================================================"
          done
        done


